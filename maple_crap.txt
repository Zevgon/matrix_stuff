b:= proc(n, i) option remember; `if`(
		n=0, {0}, `if`(
			i<1, {},
				{
					seq(
						map(
							p-> p+j*x^i, b(
								n-i*j, i-1
							)
						)[], j=0..n/i
					)
				}
			)
		)
		end:

def b(n, i)
	if n == 0
		return 0
	elsif i < 1
		return nil
	end
	a = (0..n / i).to_a
	a.map{|j| }
end

g:= proc(n, k) option remember; add(add(2^add(add(igcd(i, j)*
      coeff(s, x, i)* coeff(t, x, j), j=1..degree(t)),
      i=1..degree(s))/mul(i^coeff(s, x, i)*coeff(s, x, i)!,
      i=1..degree(s))/mul(i^coeff(t, x, i)*coeff(t, x, i)!,
      i=1..degree(t)), t=b(n+k$2)), s=b(n$2))
    end:


A:= (n, k)-> g(min(n, k), abs(n-k)):

seq(seq(A(n, d-n), n=0..d), d=0..14)
